--// LeoHubUI.lua  •  by you (Leo) + helper
--// Özellikler:
--//  - Orta-sol’da HER ZAMAN görünen Toggle butonu (efektli)
--//  - Menü: tam ortada, açılış/kapanış animasyonlu, neon/gradient/ışık
--//  - Sürükleme (PC + Mobil), köşeden Resize, + / - hızlı ölçek
--//  - Speed/Jump slider + toggle, Fly (WASD + Space/LCtrl), GodMode
--//  - Avatar Copy (oyuncu listesi), Teleport to Spawn, All ON/OFF
--//  - Mobil pinch-to-zoom
--//  - Insert ile hızlı aç/kapa
--//  - Hatalara karşı pcall + temiz bağlantı yönetimi

local Players            = game:GetService("Players")
local RunService         = game:GetService("RunService")
local UserInputService   = game:GetService("UserInputService")
local TweenService       = game:GetService("TweenService")
local StarterGui         = game:GetService("StarterGui")

local LP = Players.LocalPlayer
local PlayerGui = LP:WaitForChild("PlayerGui")

-- Eski kalıntıları temizle
for _,n in ipairs({"LeoHubUI_Root","LeoHubUI_OpenRoot"}) do
    local g = PlayerGui:FindFirstChild(n)
    if g then g:Destroy() end
end

-- Durum
local S = {
    speedEnabled = false, speedValue = 60,
    jumpEnabled  = false, jumpValue  = 140,
    godEnabled   = false,
    flyEnabled   = false, flySpeed   = 80,
    flyBV = nil, flyBG = nil,
    cons = {}
}

local function notify(t, m, d)
    pcall(function()
        StarterGui:SetCore("SendNotification", {Title=t or "LeoHub", Text=m or "", Duration=d or 2})
    end)
end

local function addConn(c) table.insert(S.cons, c) end
local function clearCons()
    for _,c in ipairs(S.cons) do pcall(function() c:Disconnect() end) end
    S.cons = {}
end

local function hum()
    local ch = LP.Character
    if not ch then return nil end
    return ch:FindFirstChildOfClass("Humanoid")
end

local function applyStats()
    local h = hum()
    if not h then return end
    h.WalkSpeed = S.speedEnabled and S.speedValue or 16
    h.JumpPower = S.jumpEnabled and S.jumpValue or 50
    if S.godEnabled then
        h.MaxHealth = math.huge; h.Health = h.MaxHealth
    else
        h.MaxHealth = 100; if h.Health>100 then h.Health=100 end
    end
end

-- Respawn’da geri uygula
addConn(LP.CharacterAdded:Connect(function()
    task.wait(0.15)
    applyStats()
end))

-- ========= FLY =========
local flyLoop
local function startFly()
    if S.flyEnabled then return end
    local ch = LP.Character; if not ch then return end
    local hrp = ch:FindFirstChild("HumanoidRootPart"); if not hrp then return end

    if S.flyBV then pcall(function() S.flyBV:Destroy() end) end
    if S.flyBG then pcall(function() S.flyBG:Destroy() end) end

    S.flyBV = Instance.new("BodyVelocity"); S.flyBV.MaxForce = Vector3.new(1e5,1e5,1e5); S.flyBV.Parent = hrp
    S.flyBG = Instance.new("BodyGyro");     S.flyBG.MaxTorque = Vector3.new(1e5,1e5,1e5); S.flyBG.P=2000; S.flyBG.Parent = hrp

    S.flyEnabled = true
    notify("Fly","Enabled",1.2)

    flyLoop = RunService.RenderStepped:Connect(function()
        if not S.flyEnabled or not hrp then return end
        local cam = workspace.CurrentCamera
        local mv  = Vector3.new()
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then mv += cam.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then mv -= cam.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then mv -= cam.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then mv += cam.CFrame.RightVector end
        local up = 0
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then up += 1 end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then up -= 1 end

        local dir = Vector3.new(mv.X, up, mv.Z)
        if dir.Magnitude>0 then dir = dir.Unit * S.flySpeed end

        if S.flyBV then S.flyBV.Velocity = dir end
        if S.flyBG then
            local look = cam.CFrame.LookVector
            S.flyBG.CFrame = CFrame.new(hrp.Position, hrp.Position + Vector3.new(look.X,0,look.Z))
        end
    end)
    addConn(flyLoop)
end
local function stopFly()
    S.flyEnabled=false
    if flyLoop then pcall(function() flyLoop:Disconnect() end); flyLoop=nil end
    if S.flyBV then pcall(function() S.flyBV:Destroy() end); S.flyBV=nil end
    if S.flyBG then pcall(function() S.flyBG:Destroy() end); S.flyBG=nil end
    applyStats()
    notify("Fly","Disabled",1.2)
end

-- ========= UI =========
-- Menü (root)
local Root = Instance.new("ScreenGui")
Root.Name = "LeoHubUI_Root"
Root.ResetOnSpawn = false
Root.Enabled = false -- ilk açılış kapalı
Root.Parent = PlayerGui

-- Open button için AYRI gui (daima görünür kalsın)
local OpenRoot = Instance.new("ScreenGui")
OpenRoot.Name = "LeoHubUI_OpenRoot"
OpenRoot.ResetOnSpawn = false
OpenRoot.Parent = PlayerGui

-- Ana panel
local MAIN_W, MAIN_H = 480, 540
local Main = Instance.new("Frame", Root)
Main.Name = "Main"
Main.AnchorPoint = Vector2.new(0.5,0.5)
Main.Position = UDim2.new(0.5,0,0.5,0)     -- tam merkez
Main.Size = UDim2.new(0, MAIN_W, 0, MAIN_H)
Main.BackgroundColor3 = Color3.fromRGB(12,12,18)
Main.BorderSizePixel = 0
Main.ZIndex = 50
do
    local c = Instance.new("UICorner", Main); c.CornerRadius = UDim.new(0,14)
    local s = Instance.new("UIStroke", Main); s.Color = Color3.fromRGB(90,180,255); s.Thickness=2; s.Transparency=0.25
    local g = Instance.new("UIGradient", Main)
    g.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(16,16,26)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20,16,34))
    }
    g.Rotation = 45
end

-- Başlık
local Title = Instance.new("Frame", Main)
Title.Size = UDim2.new(1,0,0,56)
Title.BackgroundColor3 = Color3.fromRGB(18,18,28)
Title.BorderSizePixel = 0
do
    Instance.new("UICorner", Title).CornerRadius = UDim.new(0,14)
    local grad = Instance.new("UIGradient", Title)
    grad.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(65,150,255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(130,85,255))
    }
    grad.Rotation = 0; grad.Transparency = NumberSequence.new(0.7)
end

local TitleText = Instance.new("TextLabel", Title)
TitleText.BackgroundTransparency = 1
TitleText.Size = UDim2.new(1,-150,1,0)
TitleText.Position = UDim2.new(0,14,0,0)
TitleText.Font = Enum.Font.GothamBold
TitleText.Text = "LeoHub • Neon UI"
TitleText.TextSize = 20
TitleText.TextColor3 = Color3.fromRGB(235,245,255)
TitleText.TextXAlignment = Enum.TextXAlignment.Left

local function makeBtn(parent, txt, size, pos, bg)
    local b = Instance.new("TextButton", parent)
    b.Size = size; b.Position = pos
    b.Text = txt; b.Font = Enum.Font.GothamBold; b.TextSize = 16
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.BackgroundColor3 = bg or Color3.fromRGB(40,80,200)
    b.AutoButtonColor = false
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    local st = Instance.new("UIStroke", b); st.Color = Color3.fromRGB(120,200,255); st.Transparency=0.4
    -- Hover efekti
    b.MouseEnter:Connect(function()
        TweenService:Create(b, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size=UDim2.new(b.Size.X.Scale,b.Size.X.Offset+2,b.Size.Y.Scale,b.Size.Y.Offset+2)}):Play()
    end)
    b.MouseLeave:Connect(function()
        TweenService:Create(b, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size=size}):Play()
    end)
    return b
end

-- Başlık kontrol butonları
local CloseBtn = makeBtn(Title, "X", UDim2.new(0,38,0,30), UDim2.new(1,-46,0,13), Color3.fromRGB(200,70,70))
local PlusBtn  = makeBtn(Title, "+", UDim2.new(0,36,0,30),  UDim2.new(1,-92,0,13), Color3.fromRGB(60,120,255))
local MinusBtn = makeBtn(Title, "-", UDim2.new(0,36,0,30),  UDim2.new(1,-132,0,13), Color3.fromRGB(60,120,255))

-- Bölmeler
local Left  = Instance.new("Frame", Main);  Left.BackgroundTransparency=1;  Left.Size=UDim2.new(0.60,-12,1,-72); Left.Position=UDim2.new(0,10,0,62)
local Right = Instance.new("Frame", Main); Right.BackgroundTransparency=1; Right.Size=UDim2.new(0.40,-12,1,-72); Right.Position=UDim2.new(0.60,8,0,62)

local function section(parent, text)
    local lbl = Instance.new("TextLabel", parent)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.Font = Enum.Font.GothamSemibold
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.fromRGB(160,200,255)
    lbl.Size = UDim2.new(1,0,0,18)
    lbl.TextXAlignment = Enum.TextXAlignment.Left
end

local function toggle(parent, name, initial, cb)
    local b = Instance.new("TextButton", parent)
    b.Size = UDim2.new(1,0,0,38)
    b.Text = name .. (initial and " • ON" or " • OFF")
    b.Font = Enum.Font.Gotham; b.TextSize = 15
    b.TextColor3 = Color3.fromRGB(230,230,255)
    b.BackgroundColor3 = initial and Color3.fromRGB(12,60,30) or Color3.fromRGB(22,22,34)
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    local st = Instance.new("UIStroke", b); st.Color = Color3.fromRGB(90,160,255); st.Transparency=0.55
    local on = initial
    b.MouseButton1Click:Connect(function()
        on = not on
        b.Text = name .. (on and " • ON" or " • OFF")
        b.BackgroundColor3 = on and Color3.fromRGB(12,60,30) or Color3.fromRGB(22,22,34)
        pcall(cb, on)
    end)
    return b
end

local function sliderRow(parent, labelText, minV, maxV, startV, onChange)
    local row = Instance.new("Frame", parent); row.Size = UDim2.new(1,0,0,36); row.BackgroundTransparency=1
    local lab = Instance.new("TextLabel", row); lab.BackgroundTransparency=1; lab.Size=UDim2.new(0.5,0,1,0); lab.TextXAlignment=Enum.TextXAlignment.Left
    lab.Font=Enum.Font.Gotham; lab.TextSize=14; lab.TextColor3=Color3.fromRGB(200,200,255); lab.Text = labelText..": "..tostring(startV)

    local bg = Instance.new("Frame", row); bg.Size=UDim2.new(0.5,-6,0,12); bg.Position=UDim2.new(0.5,6,0,12)
    bg.BackgroundColor3 = Color3.fromRGB(14,14,22); Instance.new("UICorner", bg).CornerRadius = UDim.new(0,6)
    local fill = Instance.new("Frame", bg); fill.Size=UDim2.new((startV-minV)/(maxV-minV),0,1,0); fill.BackgroundColor3 = Color3.fromRGB(90,160,255); Instance.new("UICorner", fill)

    local drag=false
    local function setFromX(x)
        local rel = math.clamp((x - bg.AbsolutePosition.X)/bg.AbsoluteSize.X,0,1)
        fill.Size = UDim2.new(rel,0,1,0)
        local val = math.floor(minV + (maxV-minV)*rel + 0.5)
        lab.Text = labelText..": "..val
        pcall(onChange, val)
    end
    bg.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            drag=true; setFromX(i.Position.X)
        end
    end)
    bg.InputEnded:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then drag=false end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if not drag then return end
        if i.UserInputType~=Enum.UserInputType.MouseMovement and i.UserInputType~=Enum.UserInputType.Touch then return end
        setFromX(i.Position.X)
    end)
    return row, lab
end

-- Sol taraf içerik
Instance.new("UIListLayout", Left).Padding = UDim.new(0,8)
section(Left, "Player Mods")

local SpeedT = toggle(Left, "Speed", S.speedEnabled, function(on)
    S.speedEnabled = on; applyStats()
end)
local _, speedLab = sliderRow(Left, "Speed", 16, 200, S.speedValue, function(v) S.speedValue=v; if S.speedEnabled and not S.flyEnabled then applyStats() end end)

local JumpT = toggle(Left, "Jump", S.jumpEnabled, function(on)
    S.jumpEnabled = on; applyStats()
end)
local _, jumpLab = sliderRow(Left, "Jump", 50, 300, S.jumpValue, function(v) S.jumpValue=v; if S.jumpEnabled then applyStats() end end)

local FlyT = toggle(Left, "Fly (W/A/S/D + Space/LCtrl)", S.flyEnabled, function(on)
    if on then startFly() else stopFly() end
end)

local GodT = toggle(Left, "GodMode", S.godEnabled, function(on)
    S.godEnabled = on; applyStats()
end)

-- All on/off
local allRow = Instance.new("Frame", Left); allRow.BackgroundTransparency=1; allRow.Size=UDim2.new(1,0,0,40)
local AllOn  = makeBtn(allRow, "All ON",  UDim2.new(0.5,-6,1,0), UDim2.new(0,0,0,0), Color3.fromRGB(30,120,40))
local AllOff = makeBtn(allRow, "All OFF", UDim2.new(0.5,-6,1,0), UDim2.new(0.5,6,0,0), Color3.fromRGB(120,30,30))
AllOn.MouseButton1Click:Connect(function()
    S.speedEnabled=true; S.jumpEnabled=true; S.godEnabled=true
    SpeedT.Text="Speed • ON"; SpeedT.BackgroundColor3=Color3.fromRGB(12,60,30)
    JumpT.Text ="Jump • ON";  JumpT.BackgroundColor3 =Color3.fromRGB(12,60,30)
    GodT.Text  ="GodMode • ON"; GodT.BackgroundColor3=Color3.fromRGB(12,60,30)
    applyStats()
    if not S.flyEnabled then startFly(); FlyT.Text="Fly (W/A/S/D + Space/LCtrl) • ON"; FlyT.BackgroundColor3=Color3.fromRGB(12,60,30) end
    notify("All","Enabled",1.2)
end)
AllOff.MouseButton1Click:Connect(function()
    S.speedEnabled=false; S.jumpEnabled=false; S.godEnabled=false
    SpeedT.Text="Speed • OFF"; SpeedT.BackgroundColor3=Color3.fromRGB(22,22,34)
    JumpT.Text ="Jump • OFF";  JumpT.BackgroundColor3 =Color3.fromRGB(22,22,34)
    GodT.Text  ="GodMode • OFF"; GodT.BackgroundColor3=Color3.fromRGB(22,22,34)
    stopFly(); FlyT.Text="Fly (W/A/S/D + Space/LCtrl) • OFF"; FlyT.BackgroundColor3=Color3.fromRGB(22,22,34)
    applyStats()
    notify("All","Disabled",1.2)
end)

-- Sağ taraf: Avatar Copy
section(Right, "Avatar Copy")
local Scroll = Instance.new("ScrollingFrame", Right)
Scroll.Size = UDim2.new(1,0,0.72,0)
Scroll.Position = UDim2.new(0,0,0.08,0)
Scroll.BackgroundTransparency = 1
Scroll.ScrollBarThickness = 6
local listLayout = Instance.new("UIListLayout", Scroll); listLayout.Padding = UDim.new(0,6)

local function refreshPlayers()
    Scroll:ClearAllChildren()
    local lay = Instance.new("UIListLayout", Scroll); lay.Padding = UDim.new(0,6)
    for _,p in ipairs(Players:GetPlayers()) do
        if p~=LP then
            local b = makeBtn(Scroll, p.Name, UDim2.new(1,-12,0,34), UDim2.new(0,6,0,0), Color3.fromRGB(24,24,36))
            b.MouseButton1Click:Connect(function()
                for _,c in ipairs(Scroll:GetChildren()) do
                    if c:IsA("TextButton") then c.BackgroundColor3 = Color3.fromRGB(24,24,36) end
                end
                b.BackgroundColor3 = Color3.fromRGB(70,40,160)
                Scroll:SetAttribute("Selected", p.Name)
            end)
        end
    end
    task.wait()
    if lay then Scroll.CanvasSize = UDim2.new(0,0,0, lay.AbsoluteContentSize.Y + 8) end
end
refreshPlayers()
Players.PlayerAdded:Connect(function() task.defer(refreshPlayers) end)
Players.PlayerRemoving:Connect(function() task.defer(refreshPlayers) end)

local CopyBtn = makeBtn(Right, "Copy Selected Avatar", UDim2.new(1,0,0,36), UDim2.new(0,0,0.83,0), Color3.fromRGB(70,40,160))
CopyBtn.MouseButton1Click:Connect(function()
    local selName = Scroll:GetAttribute("Selected")
    if not selName then return notify("Avatar Copy","Select a player",1.4) end
    local target = Players:FindFirstChild(selName)
    if not target then return notify("Avatar Copy","Player left",1.4) end
    local ok,desc = pcall(function() return Players:GetHumanoidDescriptionFromUserId(target.UserId) end)
    if not ok or not desc then return notify("Avatar Copy","Failed to fetch",1.6) end
    local h = hum(); if not h then return end
    pcall(function() h:ApplyDescription(desc) end)
    notify("Avatar Copy","Copied from "..selName,1.6)
end)

local RefreshBtn = makeBtn(Right, "Refresh List", UDim2.new(1,0,0,30), UDim2.new(0,0,0.92,0), Color3.fromRGB(30,30,50))
RefreshBtn.MouseButton1Click:Connect(refreshPlayers)

-- Teleport
local TPBtn = makeBtn(Main, "Teleport to Spawn", UDim2.new(0.44,0,0,34), UDim2.new(0.05,0,0.92,0), Color3.fromRGB(30,90,180))
TPBtn.MouseButton1Click:Connect(function()
    local ch = LP.Character
    if ch and ch:FindFirstChild("HumanoidRootPart") then
        local spawn = workspace:FindFirstChildOfClass("SpawnLocation")
        if spawn and spawn:IsA("BasePart") then
            ch.HumanoidRootPart.CFrame = spawn.CFrame + Vector3.new(0,3,0)
        else
            ch.HumanoidRootPart.CFrame = CFrame.new(0,10,0)
        end
        notify("TP","Teleported",1.2)
    end
end)

-- Sürükleme (başlık)
do
    local dragging=false; local inputRef=nil; local startPos; local startMouse
    Title.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging=true; inputRef=i; startPos=Main.Position; startMouse=i.Position
            i.Changed:Connect(function() if i.UserInputState==Enum.UserInputState.End then dragging=false end end)
        end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if dragging and i==inputRef then
            local d = i.Position - startMouse
            Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + d.X, startPos.Y.Scale, startPos.Y.Offset + d.Y)
        end
    end)
end

-- Resize (köşe)
local Resizer = Instance.new("Frame", Main)
Resizer.Size = UDim2.new(0,18,0,18)
Resizer.AnchorPoint = Vector2.new(1,1)
Resizer.Position = UDim2.new(1,-10,1,-10)
Resizer.BackgroundColor3 = Color3.fromRGB(28,28,36)
Instance.new("UICorner", Resizer).CornerRadius = UDim.new(0,6)
do
    local resizing=false; local iRef; local startPos; local startSize
    Resizer.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            resizing=true; iRef=i; startPos=i.Position; startSize=Main.AbsoluteSize
            i.Changed:Connect(function() if i.UserInputState==Enum.UserInputState.End then resizing=false end end)
        end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if resizing and i==iRef then
            local d = i.Position - startPos
            local nw = math.clamp(startSize.X + d.X, 320, workspace.CurrentCamera.ViewportSize.X - 40)
            local nh = math.clamp(startSize.Y + d.Y, 240, workspace.CurrentCamera.ViewportSize.Y - 80)
            Main.Size = UDim2.new(0,nw,0,nh)
        end
    end)
end

-- Pinch-to-zoom (mobil)
do
    local touches = {}
    local pActive=false; local pStartDist; local pStartSize
    UserInputService.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.Touch then
            touches[i.UserInputId]=i
            if (table.getn(touches) or 0) == 2 then
                local t = {}
                for _,v in pairs(touches) do table.insert(t,v) end
                pActive=true
                pStartDist = (t[1].Position - t[2].Position).Magnitude
                pStartSize = Main.AbsoluteSize
            end
        end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.Touch then touches[i.UserInputId]=i end
        if pActive then
            local t = {}; for _,v in pairs(touches) do table.insert(t,v) end
            if #t>=2 and pStartDist and pStartSize then
                local cur = (t[1].Position - t[2].Position).Magnitude
                local scale = cur / pStartDist
                local nw = math.clamp(pStartSize.X * scale, 320, workspace.CurrentCamera.ViewportSize.X - 40)
                local nh = math.clamp(pStartSize.Y * scale, 240, workspace.CurrentCamera.ViewportSize.Y - 80)
                Main.Size = UDim2.new(0, math.floor(nw+0.5), 0, math.floor(nh+0.5))
            end
        end
    end)
    UserInputService.InputEnded:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.Touch then
            touches[i.UserInputId]=nil
            local count=0 for _ in pairs(touches) do count+=1 end
            if count<2 then pActive=false; pStartDist=nil; pStartSize=nil end
        end
    end)
end

-- Ölçek +/-
local function quickScale(f)
    local as = Main.AbsoluteSize
    local nw = math.clamp(as.X * f, 320, workspace.CurrentCamera.ViewportSize.X - 40)
    local nh = math.clamp(as.Y * f, 240, workspace.CurrentCamera.ViewportSize.Y - 80)
    Main.Size = UDim2.new(0, math.floor(nw+0.5), 0, math.floor(nh+0.5))
end
PlusBtn.MouseButton1Click:Connect(function() quickScale(1.12) end)
MinusBtn.MouseButton1Click:Connect(function() quickScale(0.88) end)

-- Aç/Kapa animasyonları
local animLock=false
local function showUI()
    if animLock then return end
    animLock=true
    Root.Enabled=true
    Main.Size = UDim2.new(0, math.floor(MAIN_W*0.7), 0, math.floor(MAIN_H*0.7))
    Main.Position = UDim2.new(0.5,0,0.5,20)
    TweenService:Create(Main, TweenInfo.new(0.28, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size=UDim2.new(0,MAIN_W,0,MAIN_H), Position=UDim2.new(0.5,0,0.5,0)
    }):Play()
    task.delay(0.30, function() animLock=false end)
end
local function hideUI()
    if animLock then return end
    animLock=true
    TweenService:Create(Main, TweenInfo.new(0.22, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
        Size=UDim2.new(0, math.floor(MAIN_W*0.7), 0, math.floor(MAIN_H*0.7)),
        Position=UDim2.new(0.5,0,1.4,0)
    }):Play()
    task.delay(0.22, function()
        Root.Enabled=false
        Main.AnchorPoint=Vector2.new(0.5,0.5)
        Main.Position=UDim2.new(0.5,0,0.5,0)
        Main.Size=UDim2.new(0,MAIN_W,0,MAIN_H)
        animLock=false
    end)
end

-- Klavye (Insert)
addConn(UserInputService.InputBegan:Connect(function(i,gp)
    if gp then return end
    if i.KeyCode==Enum.KeyCode.Insert then
        if Root.Enabled then hideUI() else showUI() end
    end
end))

-- ======== ORTA-SOL TOGGLE (HER ZAMAN GÖRÜNÜR) ========
local OpenBtn = Instance.new("TextButton", OpenRoot)
OpenBtn.Name = "LeoHub_Toggle"
OpenBtn.AnchorPoint = Vector2.new(0,0.5)
OpenBtn.Position = UDim2.new(0, 12, 0.5, 0)   -- ORTA SOL
OpenBtn.Size = UDim2.new(0, 120, 0, 40)
OpenBtn.BackgroundColor3 = Color3.fromRGB(24,24,34)
OpenBtn.Text = "LEOHUB"
OpenBtn.Font = Enum.Font.GothamBold
OpenBtn.TextSize = 15
OpenBtn.TextColor3 = Color3.fromRGB(200,240,255)
Instance.new("UICorner", OpenBtn).CornerRadius = UDim.new(0,12)
local obs = Instance.new("UIStroke", OpenBtn); obs.Color = Color3.fromRGB(120,200,255); obs.Thickness=2; obs.Transparency=0.35
local og = Instance.new("UIGradient", OpenBtn)
og.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30,30,50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(38,28,58))
}
og.Rotation = 90

-- buton hover/press efekti
OpenBtn.MouseEnter:Connect(function()
    TweenService:Create(OpenBtn, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0,124,0,44)}):Play()
end)
OpenBtn.MouseLeave:Connect(function()
    TweenService:Create(OpenBtn, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0,120,0,40)}):Play()
end)
OpenBtn.MouseButton1Click:Connect(function()
    if Root.Enabled then hideUI() else showUI() end
end)

-- Kapat tuşu
CloseBtn.MouseButton1Click:Connect(hideUI)

-- Kamera boyutu değişince clamp
addConn(workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
    local V = workspace.CurrentCamera.ViewportSize
    local nw = math.clamp(Main.AbsoluteSize.X, 320, V.X-40)
    local nh = math.clamp(Main.AbsoluteSize.Y, 240, V.Y-80)
    Main.Size = UDim2.new(0,nw,0,nh)
end))

-- Başlangıç bildirimi
notify("LeoHubUI","Toggle solda → LEOHUB",3)

-- Public küçük API
return {
    Show=showUI, Hide=hideUI,
    Toggle=function() if Root.Enabled then hideUI() else showUI() end end
}
